{"version":3,"file":"static/js/736.7fa1c044.chunk.js","mappings":"+SAGMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAe,mCAAG,oGACJD,EAAAA,EAAAA,IAAA,sCAAyCD,IADrC,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qDAKfC,EAAa,mCAAG,WAAMC,GAAN,uFACFL,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,4DAA8FM,IAD5F,cACnBH,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKbG,EAAe,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCR,EAAlC,oBADI,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfK,EAAe,mCAAG,WAAMD,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,4BAA0CR,EAA1C,oBADI,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,4BAA0CR,EAA1C,2BADI,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qD,qLCvBfO,EAAUC,EAAAA,EAAAA,QAAH,0BAIPC,EAAOD,EAAAA,EAAAA,GAAH,iUAaJE,EAAOF,EAAAA,EAAAA,GAAH,qFAKJG,EAAMH,EAAAA,EAAAA,IAAH,2EAMHI,EAAYJ,EAAAA,EAAAA,EAAH,sBAETK,EAAYL,EAAAA,EAAAA,EAAH,sB,kBCrBTM,EAAO,WAChB,OAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACOb,GAAMc,EAAAA,EAAAA,MAANd,GAeP,OAZAe,EAAAA,EAAAA,YAAW,WAAM,wCACb,6GAEmCC,EAAAA,GAAoBhB,GAFvD,OAEcY,EAFd,OAGQC,EAAgBD,GAHxB,gDAKQK,MAAM,SALd,0DADa,uBAAC,WAAD,wBASbC,EACH,GAAE,CAAClB,KAGA,SAACG,EAAD,WACI,SAACE,EAAD,UACKO,GACGA,EAAaO,KAAKC,KAAI,gBAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,KAAMC,EAA/B,EAA+BA,UAA/B,OAClB,UAAClB,EAAD,YACI,SAACC,EAAD,CACAkB,IAAKH,EAAY,yCACmBA,GADnB,4EAGjBI,IAAKH,KACL,SAACf,EAAD,UAAYe,KACZ,SAACd,EAAD,UAAYe,MAPJH,EADM,OAczC,EAED,G","sources":["api/api.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nconst API_KEY = '425e30ddd9895d0b97d51a8502562e6a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMoviTrending = async() => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n}\n\nexport const getMoviSearch = async query => {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`);\n    return response.data;\n}\n\nexport const getMovieDetails = async id => {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieCredits = async id => {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieReviews = async id => {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;\n}\n\n\n\n","import styled from \"@emotion/styled\";\n\n\nexport const Section = styled.section`\n\n`;\n\nexport const List = styled.ul`\ndisplay: grid;\nmax-width: calc(100vw - 48px);\ngrid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\ngrid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\ngrid-gap: 16px;\nmargin-top: 0;\nmargin-bottom: 0;\npadding: 0;\nlist-style: none;\nmargin-left: auto;\nmargin-right: auto;`;\n\nexport const Link = styled.li`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;`;\n\nexport const Img = styled.img`\nmargin-bottom: 5px;\nwidth: 300px;\nheight: auto;\n`;\n\nexport const ActorName = styled.p``;\n\nexport const Character = styled.p``;\n\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n    Section,\n    List, \n    Link,\n    Img,\n    ActorName,\n    Character,\n} from './Cast.styled';\nimport * as API from '../../api/api';\n\nexport const Cast = () => {\n    const [movieCredits, setMovieCredits] = useState(null);\n    const {id} = useParams();\n\n\n    useEffect (() => {\n        async function fetchMovieCredits() {\n            try{\n                const movieCredits = await API.getMovieCredits(id);\n                setMovieCredits(movieCredits);\n            } catch(error) {\n                alert('ooops');\n            }\n        }\n        fetchMovieCredits();\n    }, [id]);\n\n    return (\n        <Section>\n            <List>\n                {movieCredits && \n                    movieCredits.cast.map(({cast_id, profile_path, name, character}) => (\n                        <Link  key={cast_id}>\n                            <Img \n                            src={profile_path \n                            ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                            : `https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png`}\n                            alt={name} />\n                            <ActorName>{name}</ActorName>\n                            <Character>{character}</Character>\n                        </Link>\n                    ))}\n            </List>\n        </Section>\n    )\n}\n\nexport default Cast;"],"names":["API_KEY","axios","getMoviTrending","response","data","getMoviSearch","query","getMovieDetails","id","getMovieCredits","getMovieReviews","Section","styled","List","Link","Img","ActorName","Character","Cast","useState","movieCredits","setMovieCredits","useParams","useEffect","API","alert","fetchMovieCredits","cast","map","cast_id","profile_path","name","character","src","alt"],"sourceRoot":""}