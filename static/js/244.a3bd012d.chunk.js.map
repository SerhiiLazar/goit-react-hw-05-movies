{"version":3,"file":"static/js/244.a3bd012d.chunk.js","mappings":"+SAGMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAe,mCAAG,oGACJD,EAAAA,EAAAA,IAAA,sCAAyCD,IADrC,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qDAKfC,EAAa,mCAAG,WAAMC,GAAN,uFACFL,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,4DAA8FM,IAD5F,cACnBH,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKbG,EAAe,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCR,EAAlC,oBADI,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfK,EAAe,mCAAG,WAAMD,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,4BAA0CR,EAA1C,oBADI,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,4BAA0CR,EAA1C,2BADI,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qD,6JCvBfO,EAAUC,EAAAA,EAAAA,QAAH,sBACPC,EAAOD,EAAAA,EAAAA,GAAH,sBACJE,EAASF,EAAAA,EAAAA,GAAH,sBACNG,EAAQH,EAAAA,EAAAA,EAAH,sBACLI,EAAUJ,EAAAA,EAAAA,EAAH,sBACPK,EAAkBL,EAAAA,EAAAA,EAAH,sB,GACTA,EAAAA,EAAAA,EAAH,sB,iBC2ChB,EAvCuB,WACnB,OAAwCM,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACOZ,GAAMa,EAAAA,EAAAA,MAANb,GAeP,OAZAc,EAAAA,EAAAA,YAAW,WAAM,wCACb,6GAEmCC,EAAAA,GAAoBf,GAFvD,OAEcW,EAFd,OAGQC,EAAgBD,EAAaK,SAHrC,gDAKQC,MAAM,SALd,0DADa,uBAAC,WAAD,wBASbC,EACH,GAAE,CAAClB,IAGAW,IACI,SAACR,EAAD,UACKQ,EAAaQ,OAAS,GACnB,SAACd,EAAD,UACKM,EAAaS,KAAI,gBAAEpB,EAAF,EAAEA,GAAIqB,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACd,UAAChB,EAAD,YACI,UAACC,EAAD,qBAAec,MACf,SAACb,EAAD,UAAUc,MAFDtB,EADC,OAQtB,SAACS,EAAD,wDAOnB,C","sources":["api/api.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nconst API_KEY = '425e30ddd9895d0b97d51a8502562e6a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMoviTrending = async() => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n}\n\nexport const getMoviSearch = async query => {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`);\n    return response.data;\n}\n\nexport const getMovieDetails = async id => {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieCredits = async id => {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieReviews = async id => {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;\n}\n\n\n\n","import styled from \"@emotion/styled\";\n\n\nexport const Section = styled.section``;\nexport const List = styled.ul``;\nexport const Review = styled.li``;\nexport const Autor = styled.p``;\nexport const Content = styled.p``;\nexport const ReviewsNotFound = styled.p``;\nexport const URL = styled.p``;\n\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n    Section,\n    List,\n    Review,\n    Autor,\n    Content,\n    ReviewsNotFound,\n    \n} from './Reviews.styled';\nimport * as API from '../../api/api';\n\nexport const Reviews = () => {\n    const [movieReviews, setMovieReviews] = useState(null);\n    const {id} = useParams();\n\n\n    useEffect (() => {\n        async function fetchMovieReviews() {\n            try{\n                const movieReviews = await API.getMovieReviews(id);\n                setMovieReviews(movieReviews.results);\n            } catch(error) {\n                alert('ooops');\n            }\n        }\n        fetchMovieReviews();\n    }, [id]);\n\n    return (\n        movieReviews && (\n            <Section>\n                {movieReviews.length > 0 ? (\n                    <List>\n                        {movieReviews.map(({id, author, content}) => (\n                            <Review key={id}>\n                                <Autor>Autor: {author}</Autor>\n                                <Content>{content}</Content>\n                            </Review>\n                        ))}\n                    </List>\n                ) : (\n                    <ReviewsNotFound>\n                        We don`t have any reviews for this movie\n                    </ReviewsNotFound>\n                )}\n            </Section>\n        )\n    );\n};\n\nexport default Reviews;"],"names":["API_KEY","axios","getMoviTrending","response","data","getMoviSearch","query","getMovieDetails","id","getMovieCredits","getMovieReviews","Section","styled","List","Review","Autor","Content","ReviewsNotFound","useState","movieReviews","setMovieReviews","useParams","useEffect","API","results","alert","fetchMovieReviews","length","map","author","content"],"sourceRoot":""}