{"version":3,"file":"static/js/527.278caf52.chunk.js","mappings":"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","sources":["api/api.js","pages/Movies/Movies.styled.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '425e30ddd9895d0b97d51a8502562e6a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMoviTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviSearch = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Main = styled.main``;\n\nexport const MovieList = styled.ul`\ndisplay: grid;\nmax-width: calc(100vw - 48px);\ngrid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\ngrid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\ngrid-gap: 16px;\nmargin-top: 0;\nmargin-bottom: 0;\npadding: 0;\nlist-style: none;\nmargin-left: auto;\nmargin-right: auto;\n`;\n\nexport const MovieItem = styled.li`\nmargin-bottom: 10px;\n`;\n\nexport const PosterImg = styled.img`\nmargin-bottom: 5px;\nwidth: 300px;\nheight: auto;\n`;\n\nexport const NavItem = styled(NavLink)`\nlist-style: none;\ncolor: blue;\ntext-decoration: none;\n\ndisplay:flex;\nflex-direction: column;\nalign-items: center;\n\n:hover:not(.active),\n:focus-visible:not(.active) {\n    color: red;\n}\n`;","import styled from \"@emotion/styled\";\nimport { HiSearch } from \"react-icons/hi\";\n\nexport const Box = styled.form`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n`;\n\nexport const Button = styled.button`\nposition: relative;\ndisplay: flex;\nwidth: 50px;\njustify-content: center;\nalign-items: center;\n/* margin: 0; */\nmargin-left: 5px;\n/* padding: 0; */\nborder-radius: 20%;\nheight: 40px;\nborder: none;\n\n:hover:not(.active),\n  :focus-visible:not(.active) {\n    background-color: orangered;\n`;","import { Box, Input, Icon, Button } from './SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  return (\n    <Box onSubmit={onSubmit}>\n      <Input\n        name=\"query\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocuse\n        placeholder=\"Search movies\"\n      ></Input>\n      <Button type=\"submit\">\n        <Icon />\n      </Button>\n    </Box>\n  );\n};\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport {\n  Main,\n  MovieList,\n  MovieItem,\n  PosterImg,\n  NavItem,\n} from './Movies.styled';\nimport * as API from '../../api/api';\nimport { SearchBox } from '../../components/SearchBox/SearchBox';\n\nconst Movies = () => {\n  const [movie, setMovie] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (movieName.trim() === '') return;\n\n    async function fetchSearchMovie() {\n      try {\n        const movie = await API.getMoviSearch(movieName);\n        if (movie.total_results === 0) {\n          alert('worn');\n\n          return;\n        }\n        setMovie(movie.results);\n      } catch (error) {\n        alert('Oops something went wrong, try again.');\n      }\n    }\n\n    fetchSearchMovie();\n  }, [movieName]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const search = e.currentTarget;\n\n    if (search.elements.query.value.trim() === '') {\n      alert('Nothing entered in the search field, please enter');\n      return;\n    }\n\n    setSearchParams({ query: search.elements.query.value });\n    search.reset();\n  };\n\n  return (\n    <Main>\n      <SearchBox onSubmit={onSubmit} />\n      {movie && (\n        <MovieList>\n          {movie.map(({ id, title, poster_path }) => (\n            <MovieItem key={id}>\n              <NavItem to={`${id}`} state={{ from: location }}>\n                <PosterImg\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={title}\n                />\n                {title}\n              </NavItem>\n            </MovieItem>\n          ))}\n        </MovieList>\n      )}\n    </Main>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","getMoviTrending","response","data","getMoviSearch","query","getMovieDetails","id","getMovieCredits","getMovieReviews","Main","styled","MovieList","MovieItem","PosterImg","NavItem","NavLink","Box","Input","Icon","HiSearch","Button","SearchBox","onSubmit","name","type","autoComplete","autoFocuse","placeholder","useState","movie","setMovie","useSearchParams","searchParams","setSearchParams","location","useLocation","movieName","get","useEffect","API","total_results","alert","results","trim","fetchSearchMovie","e","preventDefault","search","currentTarget","elements","value","reset","map","title","poster_path","to","state","from","src","alt"],"sourceRoot":""}